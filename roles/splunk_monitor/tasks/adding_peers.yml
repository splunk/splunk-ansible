---
- name: Fetch distsearch server info
  uri:
    url: "{{ cert_prefix }}://127.0.0.1:{{ splunk.svc_port }}/servicesNS/nobody/search/configs/conf-distsearch/distributedSearch?output_mode=json"
    method: GET
    user: "{{ splunk.admin_user }}"
    password: "{{ splunk.password }}"
    validate_certs: false
    status_code: 200
    return_content: yes
    body_format: json
  register: distsearch_server_info

- name: Initialize current group list
  set_fact:
    current_group_list: []

- name: Create list of current peers
  set_fact:
    current_group_list: "{{ current_group_list }} + [ '{{ item }}' ]"
  with_items: "{{ distsearch_server_info['json']['entry'][0]['content']['servers'].split(',') }}"
  when: distsearch_server_info['json']['entry'][0]['content']['servers'] is defined and (distsearch_server_info['json']['entry'][0]['content']['servers']| length > 0)

- name: Remove search peers
  command: "{{ splunk.exec }} remove search-server {{ item }} -auth {{ splunk.admin_user }}:{{ splunk.password }} -remoteUsername {{ splunk.admin_user }} -remotePassword {{ splunk.password }}"
  become: yes
  become_user: "{{ splunk.user }}"
  register: remove_as_peer
  until: remove_as_peer.rc == 0 or 'already exists' in remove_as_peer.stderr
  retries: "{{ retry_num }}"
  delay: "{{ retry_delay }}"
  changed_when: remove_as_peer.rc == 0
  failed_when: remove_as_peer.rc != 0 and 'already exists' not in remove_as_peer.stderr
  notify:
    - Restart the splunkd service
  no_log: "{{ hide_password }}"
  with_items: "{{ current_group_list }}"
  when: current_group_list is defined and (current_group_list| length > 0)

- name: Create list of peers
  set_fact:
    group_list: "{{ groups['splunk_indexer'] | default([]) }} + {{ groups['splunk_search_head'] | default([]) }} + {{ groups['splunk_search_head_captain'] | default([]) }} + {{ groups['splunk_cluster_master'] | default([]) }} + {{ groups['splunk_deployment_server']| default([]) }} + {{ groups['splunk_license_master'] | default([]) }} + {{ groups['splunk_standalone'] | default([]) }}"

- include_tasks: ../../../roles/splunk_common/tasks/wait_for_splunk_instance.yml
  vars:
    splunk_instance_address: "{{ item }}"
  with_items: "{{ group_list }}"

- name: Set search peers
  command: "{{ splunk.exec }} add search-server {{ cert_prefix }}://{{ item }}:{{ splunk.svc_port }} -auth {{ splunk.admin_user }}:{{ splunk.password }} -remoteUsername {{ splunk.admin_user }} -remotePassword {{ splunk.password }}"
  become: yes
  become_user: "{{ splunk.user }}"
  register: set_as_peer
  until: set_as_peer.rc == 0 or 'already exists' in set_as_peer.stderr
  retries: "{{ retry_num }}"
  delay: "{{ retry_delay }}"
  changed_when: set_as_peer.rc == 0
  failed_when: set_as_peer.rc != 0 and 'already exists' not in set_as_peer.stderr
  notify:
    - Restart the splunkd service
  no_log: "{{ hide_password }}"
  with_items: "{{ group_list }}"