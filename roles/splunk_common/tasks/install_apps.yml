---
- name: Install Splunkbase app
  uri:
    url: "{{ cert_prefix }}://127.0.0.1:{{ splunk.svc_port }}/services/apps/local"
    method: POST
    user: "{{ splunk.admin_user }}"
    password: "{{ splunk.password }}"
    validate_certs: false
    body:
      name: "{{ app_url }}"
      update: "true"
      filename: "true"
      auth: "{{ splunkbase_token }}"
    body_format: "form-urlencoded"
    status_code: [ 200, 201 ]
    timeout: 300
  when:
    - "'splunkbase.splunk.com' in app_url"
    - splunkbase_token is defined
    - splunkbase_token != None
  no_log: "{{ hide_password }}"

- name: Install generic app
  when: "'splunkbase.splunk.com' not in app_url"
  block:
  - name: Check local app
    stat:
      path: "{{ app_url }}"
    register: app_local

  - name: Download remote app
    get_url:
      url: "{{ app_url }}"
      dest: /tmp/
      mode: 0777
      timeout: 120
      validate_certs: no
      force: yes
    register: app_remote
    when:
      - app_url is match("^(https?|file)://.*")

  - name: Infer app filepath
    set_fact:
      app_filepath: "{% if app_url | regex_search('^(https?|file)://.*') %}{{ app_remote.dest }}{% else %}{{ app_local.stat.path }}{% endif %}"

  # ITSI require installation via extraction - others can be installed normally.
  # Verify the contents of the package and check for ITSI
  - name: Check app contents
    shell: "set -o pipefail && tar --exclude='*/*/*' --exclude='*.*' -tf {{ app_filepath }} | awk -F'/' '{ print$1 }' | uniq"
    args:
      executable: /bin/bash
    register: app_contents
    changed_when: false
    when: "'splunkbase.splunk.com' not in app_url"

  - name: Install app via extraction
    unarchive:
      src: "{{ app_filepath }}"
      dest: "{{ splunk.app_paths.default }}"
      remote_src: true
    become: yes
    become_user: "{{ splunk.user }}"
    no_log: "{{ hide_password }}"
    when:
      - "'itsi' in app_contents.stdout_lines"
      - app_remote is changed or app_local.stat.exists
    notify:
      - Restart the splunkd service

  - name: Install app via REST
    uri:
      url: "{{ cert_prefix }}://127.0.0.1:{{ splunk.svc_port }}/services/apps/local"
      method: POST
      user: "{{ splunk.admin_user }}"
      password: "{{ splunk.password }}"
      validate_certs: false
      body:
        name: "{{ app_filepath }}"
        update: "true"
        filename: "true"
      body_format: "form-urlencoded"
      status_code: [ 200, 201 ]
      timeout: 90
    register: post_apps_local
    until: post_apps_local is succeeded
    retries: 5
    delay: "{{ retry_delay }}"
    changed_when: post_apps_local.status == 201
    when:
      - "'itsi' not in app_contents.stdout_lines"
      - app_remote is changed or app_local.stat.exists
    no_log: "{{ hide_password }}"
