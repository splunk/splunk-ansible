---
- name: "Get Splunk status"
  command: "{{ splunk.exec }} status --accept-license --answer-yes --no-prompt"
  become: yes
  become_user: "{{ splunk.user }}"
  register: splunk_status
  changed_when: False
  failed_when: False
  ignore_errors: yes

- name: "Cleanup Splunk runtime files"
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ splunk.home }}/var/run/splunk/splunkd.pid"
    - "{{ splunk.home }}/var/lib/splunk/kvstore/mongo/mongod.lock"
  when:
    - splunk_status.rc != 0
  become: yes
  become_user: "{{ splunk.user }}"

- name: "Restrict Permissions on splunk.key"
  include_tasks: restrict_permissions.yml
  vars:
    file_path: "{{ item }}"
  with_items:
    - "{{ splunk.home }}/var/lib/splunk/kvstore/mongo/splunk.key"
  when:
    - splunk_status.rc != 0

- name: "Start Splunk via cli"
  command: "{{ splunk.exec }} start --accept-license --answer-yes --no-prompt"
  become: yes
  become_user: "{{ splunk.user }}"
  register: start_splunk
  changed_when: start_splunk.rc == 0 and 'already running' not in start_splunk.stdout
  when:
    - not splunk.enable_service
    - splunk_status.rc != 0

- name: "Start Splunk via service"
  service:
    name: "{{ splunk_service_name }}"
    state: restarted
  when:
    - splunk.enable_service
    - splunk_status.rc != 0
    - ansible_system is match("Linux")
  become: yes
  become_user: "{{ privileged_user }}"

- name: "Start Splunk via Windows service"
  win_service:
    name: splunkd
    state: restarted
  when:
    - splunk.enable_service
    - splunk_status.rc != 0
    - ansible_os_family == "Windows"

- name: "Wait for splunkd management port"
  wait_for:
    port: "{{ splunk.svc_port }}"
