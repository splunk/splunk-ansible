---
- name: Check for existing serverclass.conf
  stat:
    path: "{{ splunk.home }}/etc/system/local/serverclass.conf"
  register: serverclass_conf

- name: Define all serverClass
  ini_file:
    path: "{{ splunk.home }}/etc/system/local/serverclass.conf"
    section: "serverClass:all"
    option: whitelist.0
    value: "*"
  when: not serverclass_conf.stat.exists
  become: yes
  become_user: "{{ splunk.user }}"

- name: Gather all deployment server apps
  find:
    path: "{{ splunk.app_paths.deployment }}"
    recurse: no
    file_type: directory
  register: deployment_apps
  when: not serverclass_conf.stat.exists

- name: Define all:app serverClass
  ini_file:
    path: "{{ splunk.home }}/etc/system/local/serverclass.conf"
    section: "serverClass:all:app:{{ item.path | basename }}"
    option: restartSplunkd
    value: "true"
    allow_no_value: true
  when: not serverclass_conf.stat.exists
  with_items: "{{ deployment_apps.files }}"
  become: yes
  become_user: "{{ splunk.user }}"

